{"version":3,"sources":["components/TodoApp.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodosFilter.jsx","App.js","index.js"],"names":["TodoApp","getTodo","useState","todo","setTodo","onSubmit","event","preventDefault","Date","type","className","placeholder","value","onChange","target","trimLeft","TodoItem","complete","onDelete","classNames","completed","checked","id","title","onClick","TodoList","todos","changeCompleted","deleteTodo","map","item","key","TodosFilter","todosLeft","showTodos","clearCompleted","completedTodos","href","App","setTodos","filterBy","setFilterBy","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","filteredTodos","useMemo","filter","every","length","readOnly","htmlFor","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65996059.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoApp = ({ getTodo }) => {\n  const [todo, setTodo] = useState('');\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        getTodo(+new Date(), todo);\n        setTodo('');\n      }}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todo}\n        onChange={({ target }) => setTodo(target.value.trimLeft())}\n      />\n    </form>\n  );\n};\n\nTodoApp.propTypes = {\n  getTodo: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, complete, onDelete }) => {\n\n  return (\n    <li className={classNames({\n      completed: todo.completed,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => {\n            complete(todo.id);\n          }}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            onDelete(todo.id);\n          }}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  complete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ todos, changeCompleted, deleteTodo }) => {\n  const complete = (id) => {\n    changeCompleted(id);\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(item => (\n        <TodoItem\n          todo={item}\n          key={item.id}\n          complete={complete}\n          onDelete={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodosFilter = ({\n  todosLeft,\n  showTodos,\n  clearCompleted,\n  completedTodos,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todosLeft} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className=\"selected\"\n          onClick={(event) => {\n            event.preventDefault();\n            showTodos('all');\n          }}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={(event) => {\n            event.preventDefault();\n            showTodos(false);\n          }}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={(event) => {\n            event.preventDefault();\n            showTodos(true);\n          }}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className={classNames({\n        'clear-completed': true,\n        'clear-visibility': !completedTodos,\n      })}\n      onClick={() => clearCompleted()}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nTodosFilter.propTypes = {\n  todosLeft: PropTypes.number.isRequired,\n  showTodos: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  completedTodos: PropTypes.bool.isRequired,\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [filterBy, setFilterBy] = useState('all');\n\n  useEffect(() => {\n    if (localStorage.getItem('list') !== null) {\n      setTodos(JSON.parse(localStorage.getItem('list')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(todos));\n  }, [todos]);\n\n  const filteredTodos = useMemo(() => todos.filter(todo => ((filterBy === 'all')\n    ? todo\n    : todo.completed === filterBy)), [filterBy, todos]);\n\n  const getTodo = (id, title, completed = false) => {\n    setTodos([...todos, {\n      id,\n      title,\n      completed,\n    }]);\n  };\n\n  const changeCompleted = (id) => {\n    setTodos(todos.map(todo => ((todo.id === id)\n      ? { ...todo, completed: !todo.completed }\n      : todo)));\n  };\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const clearCompleted = () => {\n    setTodos(todos.filter(todo => todo.completed === false));\n  };\n\n  const toggleCompleted = () => {\n    if (todos.length && todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: false })));\n\n      return;\n    }\n\n    setTodos(todos.map(todo => ({ ...todo, completed: true })));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <TodoApp getTodo={getTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={todos.every(todo => todo.completed)}\n          onClick={() => toggleCompleted()}\n          readOnly\n        />\n        <label\n          htmlFor=\"toggle-all\"\n        >\n          Mark all as complete\n        </label>\n\n        <TodoList\n          todos={filteredTodos}\n          changeCompleted={changeCompleted}\n          deleteTodo={deleteTodo}\n        />\n      </section>\n\n      {\n        !todos.length\n        || (\n          <TodosFilter\n            todosLeft={todos.length}\n            showTodos={setFilterBy}\n            clearCompleted={clearCompleted}\n            completedTodos={todos.some(todo => todo.completed)}\n          />\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}